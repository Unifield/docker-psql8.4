#!/bin/bash
set -e

POSTGRESQL_USER=${POSTGRESQL_USER:-"docker"}
POSTGRESQL_PASS=${POSTGRESQL_PASS:-"docker"}
# If POSTGRESQL_DB is set, a database will be created. Default = do not create.
POSTGRESQL_TEMPLATE=${POSTGRESQL_TEMPLATE:-"DEFAULT"}
# If POSTGRESQL_TRUST is set to YES, then passwords are not required. Default = NO.
#   ATTENTION: Only use this when port 5432 is not exposed, and
#   all containers are running trusted code.
POSTGRESQL_TRUST=${POSTGRESQL_TRUST:-"NO"}

POSTGRESQL_BIN=/usr/lib/postgresql/8.4/bin/postgres
POSTGRESQL_CONFIG_FILE=/etc/postgresql/8.4/main/postgresql.conf
POSTGRESQL_DATA=/var/lib/postgresql/8.4/main

POSTGRESQL_SINGLE="sudo -u postgres $POSTGRESQL_BIN --single --config-file=$POSTGRESQL_CONFIG_FILE"

if [ ! -d $POSTGRESQL_DATA ]; then
    mkdir -p $POSTGRESQL_DATA
    chown -R postgres:postgres $POSTGRESQL_DATA
    sudo -u postgres /usr/lib/postgresql/8.4/bin/initdb -D $POSTGRESQL_DATA -E 'UTF-8'
    ln -s /etc/ssl/certs/ssl-cert-snakeoil.pem $POSTGRESQL_DATA/server.crt
    ln -s /etc/ssl/private/ssl-cert-snakeoil.key $POSTGRESQL_DATA/server.key
fi

if [ "$POSTGRESQL_TRUST" = "YES" ]; then
	sed -i 's/md5/trust/' /etc/postgresql/8.4/main/pg_hba.conf
fi

$POSTGRESQL_SINGLE <<< "CREATE USER $POSTGRESQL_USER WITH SUPERUSER;" > /dev/null
$POSTGRESQL_SINGLE <<< "ALTER USER $POSTGRESQL_USER WITH PASSWORD '$POSTGRESQL_PASS';" > /dev/null

if [ -n "$POSTGRESQL_DB" ]; then
	$POSTGRESQL_SINGLE <<< "CREATE DATABASE $POSTGRESQL_DB OWNER $POSTGRESQL_USER TEMPLATE $POSTGRESQL_TEMPLATE;" > /dev/null
fi

exec sudo -u postgres $POSTGRESQL_BIN --config-file=$POSTGRESQL_CONFIG_FILE
